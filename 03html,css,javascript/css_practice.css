/*   전체 선택자 : *      */

/* * {
    color: purple;
} */

/* 태그 선택자 */

p {
    color: blue;
}


h1 {
    font-size: 24px;
    text-align: center;
    color: brown;
}

/* id 선택자 #id명  */

#h1_id {
    color: aquamarine;
    font-size: 30px;
}

#p_id {
    text-align: center;
    color: black;
}

/* class 선택자 .클래스명 */
.h1_class {
    color: red;

}

.p_class {
    background-color: grey;
}

.p_class2 {
    text-align: center;
}

.p_class3 {
    color: white;
    font-size: small;
}

.p_class.p_class2.p_class3 {
    font-size: 20px;
    color: blueviolet;
    text-align: right;
}

/* 기본 속성 선택자 */

a[target ="_blank"] {
    /* text-align: center;
    font-size: 15px; */
    color: red;
}

a[href] {
    color:yellow;
}


/* 지정된 속성의 값이 지정된 값을 (공백으로 분리된) 단어로 포함하는 요소를 선택 
태그[속성~="값"]
*/

h2[title~="first"] {
    color:red;
}


/* 태그[속성 |="값"]
지정된 속성의 값이 일치하거나 지정된 속성 값 뒤에
하이픈(-)으로 시작하는 요소를 선택
 */
 h2[title|="heading"] {
    color:green;
}

/* 태그[속성^="값"]
지정하는 속성 값으로 시작하는 요소를 선택 */

a[href^="https"] {
    color: gray;
}

/* 태그[속성$="값"] 
지정하는 속성 값으로 끝나는 요소를 선택*/

a[href$="org"] {
    color: red;
}

/* 태그[속성*="값"
지정된 속성 값을 포함하는 요소를 선택 */
div[class*="test"] {
    color:red;
}
div[class~="test"] {
    background-color: yellow;
}

/* 조합 선택자 사용하기 */
p, #title, .red {
    font-size: 25px;
    
}

p, .p_id, #p_id2 {
    font-size: 30px;
    /* background-color: violet; */
    color: black;
}

/* 자식 선택자
부모태그 자손태그 {
}
*/
/* 자손을 선택할 때는 태그 사이에 공백 */
div.grandpa p {
    color: red;
}

/* 자식 셀렉터는 부모태그 > 자식태그 */
div > p {
    color: blue;
}

/* 형제 셀렉터 형제1 + 형제2
형제1 바로뒤에 오는 형제2 요소를 선택

*/
/* p요소의 형제 요소중에 p요소 바로 뒤에 위치하는 ul 요소를 선택 */
/* 인접 형제 셀렉터(adjacemt sibling combinator) */
.siblings1 p+ul {
    color: cadetblue;
}

/* 일반 형제 셀렉터
형제1 ~ 형제2
형제1 뒤에 위치하는 형제2 요소를 모두 선택
*/
.siblings2 p ~ ul {
    color: coral;
}

/* 링크 셀렉터
:link 셀렉터가 방문하지 않은 링크일때
:visited 셀렉터가 방문한 링크일때
:hover 셀렉터에 마우스가 올라와 있을 때 
:active 셀렉터가 클릭된 상태일 때
:focus 셀렉터에 포커스가 들어와 있을 때*/


a:link {
    color: orange;
}
a:visited {
    color: green;
}
a:hover {
    font-weight: bold;
}
a:active {
    color: blue;
}
/* input창에 focus가 들어와 있을 때 */

input[type=text]:focus {
    color: red;
}
/* 구조 가상 클래스 셀렉터 */

div.structural p:first-child {
    color: red;
}

div.structural p:last-child {
    color: blue;
}

/* :nth-child(n): 셀렉터에 해당하는 모든 요소 중 앞에서 n번째인 자식 요소를 선택 , 
   :nth-last-child(): 셀렉터에 해당하는 모든 요소 중 뒤에서 n번째인 자식 요소를 선택 */


   /* n=0, 짝수 2n, 홀수 2n+1 */

   div.nth_child ol > li:nth-child(2n) {
    color: orange;
   }

   div.nth_child ol > li:nth-child(2n+1) {
    color: red;
   }

   div.nth_child ul>li:nth-child(4) {
    color: green;
   }

   div.nth_child ul>li:nth-last-child(2n) {
    font-size: 20px;
   }

   /* first-of-type : 셀렉터에 해당하는 요소의 부모 요소의 자식중에서 첫번째로 등장하는 요소 선택 */
   /* last-of-type : 셀렉터에 해당하는 요소의 부모 요소의 자식중에서 마지막에 등장하는 요소 선택 */
   /* nth-of-type(n) : 셀렉터에 해당하는 요소의 부모 요소의 자식중에서 앞에서 n번째 등장하는 요소 선택 */
   /* nth-last-of-type(n) : 셀렉터에 해당하는 요소의 부모 요소의 자식중에서 뒤에서 n번째 등장하는 요소 선택 */


   div.of_tye p:first-of-type {
    color: red;
   }

    div.of_tye p:last-of-type {
        color: skyblue;
     }

   div.of_tye p:nth-of-type(2) {
    color: green;
   }

   div.of_tye p:nth-last-of-type(2) {
    color: palevioletred;
   }

   /* 정합성 체크 셀렉터
        :valid : 정합성 검증이 성공한 input요소/form요소를 선택
        :invalid : 정합성 검증이 실패한 input요소/form요소를 선택
    
   */

   div.validity input[type="text"]:valid {
    background-color: greenyellow;
   }
   div.validity input[type="text"]:invalid {
    background-color:red;
   }


   /* 가상요소 셀렉터
        ::firtst-letter : 컨텐츠의 첫 글자를 선택
        ::first-line : 컨텐츠의 첫 줄을 선택, 블록요소만 적용
        ::after : 콘텐츠의 뒤에 공간을 선택, content와 함께 사용
        ::before :  콘텐츠의 앞에 공간을 선택, content와 함께 사용
        ::selection : 드래그한 컨텐츠를 사용
   */

   div.pseudo_ele p::first-letter {
    font-size: 3em;
   }
   
   div.pseudo_ele p::first-line {
    color: red;
   }

   div.pseudo_ele p::first-letter {
    font-size: 3em;
   }
   
   div.pseudo_ele h2::before {
    content: "HTML!!!";
    color: blue; 
   }
   div.pseudo_ele h2::after {
    content: "CSS!!!";
    color: red; 
   }
   div.pseudo_ele ::selection {
    color: red;
    background-color: yellow;
   }

   